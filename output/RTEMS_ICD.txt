The software product shall provide an Application Programming Interface.[END]
The system shall provide conﬁguration options to the application to set conﬁgurable systemparameters at link time.[END]
Each non-default directive attribute constant shall be a power of two representable as aninteger of type rtems_attribute.[END]
Each default directive attribute constant shall have a value of zero.[END]
The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_ATTRIBUTES shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_FIFO | Real-Time Executive for Multiprocessor Systems_LOCAL.[END]
The Real-Time Executive for Multiprocessor Systems_SEMAPHORE_CLASS constant shall be equal to the bitwiseor of Real-Time Executive for Multiprocessor Systems_BINARY_SEMAPHORE, Real-Time Executive for Multiprocessor Systems_COUNTING_SEMAPHORE, andReal-Time Executive for Multiprocessor Systems_SIMPLE_BINARY_SEMAPHORE.[END]
The non-default directive attribute constants shall have unique values.[END]
When argument _target is a name of a function, and the macro Real-Time Executive for Multiprocessor Systems_ALIAS call isin the same compilation unit as the function, and the macro is not used in block scope,and the macro is used in this form: <return-type> newname([argument-type-list])Real-Time Executive for Multiprocessor Systems_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the sig-nature of the function oldname , and the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_ALIAS macro shall cause the compiler to create an additional name ( newname in thesyntax) for the function given as argument _target .[END]
When the argument _alignment is a positive power of two integer, and argument _valueis a positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_DOWN shall result in a side-effect freeformula calculating an integer which is the greatest whole-number multiple of_alignmentwhich is smaller or equal _value .[END]
When the argument _alignment is a positive power of two integer, and argument _value isa positive or 0 integer, the macro Real-Time Executive for Multiprocessor Systems_ALIGN_UP shall result in a side-effect free formulacalculating an integer which is the smallest whole-number multiple of_alignment which isgreater or equal _value .[END]
When the argument _alignment is a positive power of two integer, and the macroReal-Time Executive for Multiprocessor Systems_ALIGNED is used on a none- static variable or structure ﬁeld, and the used linkersupports alignments of the size given by the _alignment argument, and the code is compiledwith the GNU C compiler, the macro shall specify a minimum alignment for the variable orstructure ﬁeld, measured in bytes.[END]
When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, and the argument _type_nameis a type, and the argument _type_name is not a function type, and the argument _type_nameis a complete type, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in the alignment requirement inbytes required for any instance of the type.[END]
When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler and the__cplusplus symbol is deﬁned with version 201103L or higher, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate its argument _type_name .[END]
When the code is compiled wit h a C compiler and the __STDC_VERSION__ symbol is de-ﬁned with version 201112L or higher or the code is compiled with a C++ compiler andthe__cplusplus symbol is deﬁned with version 201103L or higher, when the argument_type_name is an array type with none constant size expression, the macro Real-Time Executive for Multiprocessor Systems_ALIGNOFshall not evaluate the size expression.[END]
The macro Real-Time Executive for Multiprocessor Systems_ALIGNOF shall result in an constant integer of type size_t.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_ALIGN macrois used as last part of a function declaration, and _index is a constant number referring to anargument of that function (counting of arguments starts at 1 from the left), and the argumentwith that number is an integral value of a power of two, and the declared function returns apointer to memory which starts at an integral multiple of the value provided by the functionargument number _index , the macro shall cause the compiler to use the information of thealignment of the returned memory in its pointer analysis.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE macrois used as last part of a function declaration, and _index is a constant number referringto an argument of that function (counting of arguments starts at 1 from the left), and thedeclared function returns a pointer to memory with the size in bytes provided by the functionargument number _index , the macro shall cause the compiler to improve the correctness of__builtin_object_sizepointer analysis.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_ALLOC_SIZE_2 macrois used as last part of a function declaration, and _count_index as well as _size_index areconstant numbers referring to two different arguments of that function (counting of argu-ments starts at 1 from the left), and the declared function returns a pointer to memorywith the size in bytes provided by the multiplication of the function arguments number_count_index and_size_index , the macro shall cause the compiler to improve the correct-ness of__builtin_object_sizepointer analysis.[END]
When the argument _index evaluates to an value o f a C one-dimensional array type, and theevaluation of that argument has no side effects, the macro Real-Time Executive for Multiprocessor Systems_ARRAY_SIZE shall resultin the number of elements with which that array has been deﬁned.[END]
The macro Real-Time Executive for Multiprocessor Systems_COMPILER_DEPRECATED_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_DEPRECATED.[END]
When the code is compiled with the GNU C compiler, theReal-Time Executive for Multiprocessor Systems_COMPILER_MEMORY_BARRIER macro shall realize a Full Software MemoryBarrier at the place in the code where it occurs.[END]
The macro Real-Time Executive for Multiprocessor Systems_COMPILER_NO_RETURN_ATTRIBUTE shall have exactly the same effectas the macro Real-Time Executive for Multiprocessor Systems_NO_RETURN.[END]
The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PACKED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_PACKED.[END]
The macro Real-Time Executive for Multiprocessor Systems_COMPILER_PURE_ATTRIBUTE shall have exactly the same effect as themacro Real-Time Executive for Multiprocessor Systems_PURE.[END]
The macro Real-Time Executive for Multiprocessor Systems_COMPILER_UNUSED_ATTRIBUTE shall have exactly the same effect asthe macro Real-Time Executive for Multiprocessor Systems_UNUSED.[END]
When neither argument is a call of the macro Real-Time Executive for Multiprocessor Systems_CONCAT itself, the macro shall resultin both argument values concatenated textually unaltered in the order they are provided.[END]
The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall result in only those characters which also appear in itsargument values.[END]
The macro Real-Time Executive for Multiprocessor Systems_CONCAT shall make its result subject to C pre-processor operations.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_CONST macro is at-tached to a function declaration or deﬁnition, and the return value of that function is notaffected by changes to the observable state of the program and that function has no observ-able effects on such state other than to return a value, the Real-Time Executive for Multiprocessor Systems_CONST macro shall permitthe compiler to replace subsequent calls to the function with the same argument values bythe result of the ﬁrst call.[END]
When argument _mpoints to a member ﬁeld of a structure or union or C++ class, and argu-ment_type is the C type of this structure or union or C++ class, and argument _member_nameis the name of this member ﬁeld, the Real-Time Executive for Multiprocessor Systems_CONTAINER_OF macro shall result in a pointerto the start address of the structure or union or C++ class.[END]
When the macro Real-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL appears at ﬁle scope, and argu-ment_name after undergoing C pre-processor substitutions results in a valid C iden-tiﬁer name, and this identiﬁer name is not yet deﬁned at ﬁle scope, the macroReal-Time Executive for Multiprocessor Systems_DECLARE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutionsto its argument value before it results in code which declares a global symbol with the respec-tive name.[END]
When_type is a non-const pointer type, and _var is a pointer to a value of const type, and thetypes of_type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DECONST shallresult in an expression which returns a pointer of type _type pointing to the same address as_var .[END]
When the macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL appears at ﬁle scope, and argument_name after undergoing C pre-processor substitutions results in a valid C identiﬁer name,and this identiﬁer name is not yet deﬁned at ﬁle scope, and argument _value after un-dergoing C pre-processor substitutions results in a valid assembler integer value, the macroReal-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall apply all possible C pre-processor substitutions toits argument values before it results in assembler code which deﬁnes a global symbol withthe respective name and value.  [END]
The macro Real-Time Executive for Multiprocessor Systems_DEFINE_GLOBAL_SYMBOL shall deﬁne a global symbol of void pointertype with the value being an address.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_DEPRECATED macrois used as last part of a function declaration or type declaration or variable declaration orvariable deﬁnition, the macro shall cause the compiler to issue a warning message when itencounters a use of the function, type or variable.[END]
When_type is a non-const non-volatile pointer type, and _var is a pointer to a value ofconst volatile type, and the types of _type and_var are compatible in the sense of C, themacro Real-Time Executive for Multiprocessor Systems_DEQUALIFY shall result in an expression which returns a pointer of type _typepointing to the same address as _var .[END]
When the argument value of _ptr_level consists of a sequence of i*and the types of bothother arguments both have inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_typeis a pointer type with different (compared to the type of _var ) qualiﬁers (such as const orvolatile ) or the same qualiﬁers or without any qualiﬁers, and the types of _type and_varare compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEQUALIFY_DEPTHX shall result in anexpression which returns a pointer of type _type pointing to the same address as _var .[END]
When_type is a non-volatile pointer type, and _var is a pointer to a value of volatile type, andthe types of _type and_var are compatible in the sense of C, the macro Real-Time Executive for Multiprocessor Systems_DEVOLATILEshall result in an expression which returns a pointer of type _type pointing to the sameaddress as _var .[END]
The macro Real-Time Executive for Multiprocessor Systems_EXPAND shall apply all possible C pre-processor substitutions to its argu-ment value before it results in the substituted value.[END]
The macro FALSE shall result in the text 0.[END]
When the code is compiled with the GNU C compiler, and argument _t_lhs is a union orstructure, and _m_lhs is a member of _t_lhs , and argument _t_rhs is a union or structure,and_m_rhs is a member of _t_rhs , the Real-Time Executive for Multiprocessor Systems_HAVE_MEMBER_SAME_TYPE macro shallevaluate to the integer values 1 or 0 depending on whether the types of the members _m_lhsand_m_rhs are compatible in the sense of C.[END]
The Real-Time Executive for Multiprocessor Systems_INLINE_ROUTINE macro shall evaluate to the keywords static inline orstatic __inline__ which ever variant is available to the used compiler.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_MALLOCLIKE macrois used as last part of a function declaration or is attached to a function deﬁnition, andthe function returns a pointer to memory , and this pointer cannot be an alias of any otherpointer valid when the function returns, and no pointers to valid objects occur in any storageaddressed by that pointer, and the function returns non-NULL in more than 50% of the cases,the macro shall cause the compiler to use this information for optimization.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_NO_INLINE macrois used as last part of a function declaration or is attached to a function deﬁnition, and thefunction has side-effects, the macro shall prevent the compiler from inlining this function.[END]
When the code is compiled with the GNU C compiler starting at version 2.5 or the__cplusplus symbol is deﬁned with version 201103L or higher or the __STDC_VERSION__ sym-bol is deﬁned with version 201112L or higher, and the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro is used as  ﬁrst part of a function declaration or deﬁnition, the Real-Time Executive for Multiprocessor Systems_NO_RETURN macro shall informthe compiler that this function does not return when called.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a global variable deﬁnition, and the ﬁle format used supports arbitrary sections,the macro shall cause the compiler to store the variable in a section where its value is notinitialized during initial start up.[END]
When the code is compiled with the GNU C compiler, and argument _var is an automaticvariable or function argument, and the value of that variable or function argument is of atype which ﬁts into a register, the Real-Time Executive for Multiprocessor Systems_OBFUSCATE_VARIABLE macro shall prevent thecompiler from performing optimizations based on the variable value.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro is usedas last part of a structure member declaration, and the aligned attribute or Real-Time Executive for Multiprocessor Systems_ALIGNEDmacro is not used on this structure member, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the struc-ture member to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a struct, union, or C++ class type deﬁnition, and the aligned attribute orReal-Time Executive for Multiprocessor Systems_ALIGNED macro is not used on the struct, union, or C++ class type deﬁnition orany member thereof, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause all structure, union, or classmembers to be aligned at one bit for a bit-ﬁeld member and one byte otherwise.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PACKED macro isattached to a enum type deﬁnition, the Real-Time Executive for Multiprocessor Systems_PACKED macro shall cause the use of thesmallest integral type to represent the values of the enum.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_FALSE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 0.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PREDICT_TRUE macrois used as a conditional in if-expressions and loop expressions, and _exp after undergoingall possible C pre-processor substitutions is an integral expression, the macro shall cause thecompiler to assume that by the percentage of cases deﬁned by builtin-expect-probabilitythe expression evaluates to 1.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posas well as _ap_pos are constant numbers referring to two different arguments of that function,and the function argument number _format_pos is aprintf -format string, and the functionargument number _ap_pos is the ﬁrst argument to be used in the printf -format string, and  all other arguments used in the printf -format string are arguments _ap_pos +1 ,_ap_pos +2,_ap_pos + 3, and so on, the macro shall cause the compiler to use this information for typechecking the format string and arguments.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PRINTFLIKE macro isused as last part of a function declaration or preﬁxes a function deﬁnition, and _format_posis a constant number referring to an argument of that function, and the function argumentnumber_format_pos is aprintf -format string, and the function argument _ap_pos is 0, themacro shall cause the compiler to use this information for checking the format string.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_PURE macro is attachedto a function declaration or deﬁnition, and the function has no observable effects on thestate of the program other than to return a value, the Real-Time Executive for Multiprocessor Systems_PURE macro shall permit thecompiler to replace subsequent calls to the function with the same argument values by theresult of the ﬁrst call provided the state of the program observable by that function does notchange in between two calls.[END]
When the code is compiled with the GNU C compiler, the Real-Time Executive for Multiprocessor Systems_RETURN_ADDRESS macroshall evaluate to the code __builtin_return_address( 0 ) .[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_SECTION macro isattached to a function declaration or deﬁnition or a global variable deﬁnition, and the argu-ment_section after applying all possible C pre-processor substitutions to its value is a C stingcontaining valid linker section name, and the ﬁle format used supports arbitary sections, themacro shall cause the compiler to store the function or variable in a section named like theresult of the pre-processor substitutions on its argument _section .[END]
When the macro __COVERITY__ is deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall be de-ﬁned.[END]
When the macro __COVERITY__ is not deﬁned, the macro Real-Time Executive for Multiprocessor Systems_STATIC_ANALYSIS shall benot deﬁned.[END]
When the argument _cond after applying all possible C pre-processor substitutions to its valueresults in a valid C expression of integral type, and this expression can be evaluated at compiletime, and the argument _msg which may or may not undergo C pre-processor substitutionsresults into a valid C identiﬁer, the Real-Time Executive for Multiprocessor Systems_STATIC_ASSERT macro shall cause the compilerto produce a compilation error if the expression resulting from _cond evaluates to 0.[END]
The Real-Time Executive for Multiprocessor Systems_STRING macro shall result in a string formed by the C pre-processor #operatorplaced before the formal parameter.[END]
The macro TRUE shall result in the text 1.[END]
When the argument value of _level consists of a sequence of i*and the type of the otherargument has ior less than inested pointers (for example *for a pointer to int,**for apointer to a pointer of int,*** for a pointer to a pointer to a pointer to int), and_targetis either a pointer type (possibly with qualiﬁers) or an expression of such a pointer type, themacro Real-Time Executive for Multiprocessor Systems_TYPEOF_REFX shall result in a type expression which is the type of argument_target with the given number of pointers removed.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNREACHABLE macrois placed in a part of the code which control ﬂow can under no circumstances ever reach, themacro shall inform the compiler that this place in code cannot be reached.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a function deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compilerfrom emitting a warning if this function is not used.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isappended to a label in this form: <label>: Real-Time Executive for Multiprocessor Systems_UNUSED; , the Real-Time Executive for Multiprocessor Systems_UNUSED macroshall prevent the compiler from emitting a warning if this label is not used.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a type (including a union or a struct), the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall preventthe compiler from emitting a warning if variables of this type are not used.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_UNUSED macro isattached to a variable deﬁnition, the Real-Time Executive for Multiprocessor Systems_UNUSED macro shall prevent the compiler fromemitting a warning if this variable is not used.[END]
When the code is compiled with the GNU C compiler, and the Real-Time Executive for Multiprocessor Systems_USED is macro attachedto a function or static variable deﬁnition, the macro shall cause the compiler to emit thefunction implementation or variable storage even if there is no reference from C code to thefunction or variable.[END]
When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_WARN_UNUSED_RESULT macro is used as last part of a function declarationor attached to a function deﬁnition, and that function has a return type other than void ,and the returned value is not used, the macro shall cause the compiler to show a compilerwarning.[END]
When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is no other symbol at global scope with thesame name as the one of the above mentioned function or variable, the macro shall have noobservable effect.[END]
When the code is compiled with the GNU C compiler, and the produced target ﬁle format isELF or a.out, and the Real-Time Executive for Multiprocessor Systems_WEAK macro is part of a function deﬁnition at global scopeor variable deﬁnition at global scope, and there is another symbol at global scope with thesame name as the above mentioned function or variable, and this other symbol is not deﬁnedwith the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both functions orvariables have the same type, and in case of variables both variables have the same alignmentand storage size, the macro shall cause the code to behave as if the function or variabledeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro does not exist.  [END]
When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is no other func-tion symbol at global scope with the same name as newname , the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macroshall cause the compiler to create an additional name ( newname in the syntax) for the functiongiven as argument _target .[END]
When the code is compiled with the GNU C compiler, and the produced target ﬁle for-mat is ELF or a.out, and argument _target is a name of a function, and the macroReal-Time Executive for Multiprocessor Systems_WEAK_ALIAS call is in the same compilation unit as the function, and themacro is not used in block scope, and the macro is used in this form: <return-type>newname([argument-type-list]) Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS(oldname) ;, and the <return-type> andargument-type-list match the signature of the function oldname , and there is another func-tion symbol at global scope with the same name as newname , and this other function is notdeﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK macro or otherwise deﬁned or declared weak , and both func-tions have the same type, the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro shall cause the code to behave asif the function deﬁned with the Real-Time Executive for Multiprocessor Systems_WEAK_ALIAS macro does not exist.[END]
The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall apply all possible C pre-processor substitutions to its ar-gument values before it concatenates the resulting values.[END]
The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in the substituted argument values textually con-catenated in the order _xleft and_yright.[END]
The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall result in only those characters which also appear in itsargument values after applying all possible C pre-processor substitutions to them.[END]
The macro Real-Time Executive for Multiprocessor Systems_XCONCAT shall make its result subject to C pre-processor substitutions.[END]
The macro Real-Time Executive for Multiprocessor Systems_XSTRING shall apply all possible C pre-processor substitutions to its ar-gument values before the result of this substitution is converted t o a a string formed by the Cpre-processor #operator and the macro results in this string.[END]
When the code is compiled with the GNU C compiler, and theReal-Time Executive for Multiprocessor Systems_ZERO_LENGTH_ARRAY macro is used as element count of an array declara-tion, and that array declaration is the last member of a struct that is otherwise non-empty ,and that structure is never used as member of another structure or array , the macro shallcause the compiler to layout the structure as if the array had an element count of one but toreduce the total size of the structure by the size of that one array element.[END]
The rtems_clock_get_ticks_per_second function shall return the number of clock ticks persecond which is deﬁned indirectly by the CONFIGURE_MICROSECONDS_PER_TICK conﬁgu-ration option..[END]
The rtems_clock_get_ticks_since_boot function shall return the number of clock ticks since apoint in time during the system initialization or the last overﬂow of the clock tick counter.[END]
When argument _maximum_message_size is the size of the largest possible message in bytes(the same value as member maximum_message_size of type rtems_message_queue_conﬁg),andMAXIMUM_PENDING_MESSAGES is the maximum number of messages which can bestored in the message queue (the same value as member maximum_pending_messages oftype rtems_message_queue_conﬁg), and storage_area is a variable or structure member,the expression Real-Time Executive for Multiprocessor Systems_MESSAGE_QUEUE_BUFFER( ``_maximum_message_size )``storage_area[MAXIMUM_PENDING_MESSAGES ] shall declare an object of such a size that a pointer to it isusable as value for member storage_area of type rtems_message_queue_conﬁg.[END]
Each non-default task mode constant shall be a power of two representable as an integer oftype rtems_mode.[END]
Each default task mode constant shall have a value of zero.[END]
Each task mode mask constant except Real-Time Executive for Multiprocessor Systems_INTERRUPT_MASK shall be a power of tworepresentable as an integer of type rtems_mode.[END]
The bitwise and of a task mode mask constant and Real-Time Executive for Multiprocessor Systems_ALL_MODE_MASKS shall be equalto the task mode mask constant.[END]
The task mode mask constants and 0xff shall have unique values.[END]
The non-default task mode constants shall have unique values.[END]
Each non-default directive option constant shall be a power of two representable as an integerof type rtems_option.[END]
Each default directive option constant shall have a value of zero.[END]
The value of macro Real-Time Executive for Multiprocessor Systems_DEFAULT_OPTIONS shall be equal to the value of expressionReal-Time Executive for Multiprocessor Systems_WAIT .[END]
The non-default directive option constants shall have unique values.[END]