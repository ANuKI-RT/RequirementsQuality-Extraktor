The Basic mathematical Library shall run on Scalable Processor Architecture V8 and x86-64processor architectures without halting the processor.[SEP]These hardware environments, together with the wide use of the ISO C programming language for Spacecraft softwared evelopment, and the availability of a to European Cooperation for Space Standardization qualified Operating System such as Real-Time Executive for Multipro-cessor Systems, make an ISO C software library for numerical computations, based on IEEE-754 arithmetic, an appropriate candidate to pre-qualify. This pre-qualification, in compliance with the European Cooperation for Space Standardization standards and to industrial standards like Motor Industry Software Reliability Asociation, would provide the Spacecraft software developer community with an additional building block to rely on, when piecing together their specific software system.[END]
The Basic mathematical Library shall be written in ISO/IEC 9899.[END]
The Basic mathematical Library shall be compatible with the Real-Time Executive for Multiprocessor Systems Operating System.[END]
The Basic mathematical Library shall be IEEE 754-2008 compliant.[END]
The Basic mathematical Library shall be European Cooperation for Space Standardization category B compliant.[END]
The Basic mathematical Library shall be Motor Industry Software Reliability Asociation-C:2012 compliant.[END]
The Basic mathematical Library shall be compatible with the GNU C Compiler compiler and with Binutils.
The Basic mathematical Library shall provide best practices to develop an interface to access allits functionality from Matlab.[END]
The Basic mathematical Library shall provide best practices to develop an interface to access allits functionality from Simulink.[END]
The Basic mathematical Library shall provide best practices to develop C-MEX function wrappers for all its procedures.[END]
The Basic mathematical Library shall provide best practices to develop S-function wrappers for all its procedures.[END]
The Basic mathematical Library shall be compatible with source code auto-generated with the Simulink Coder.[END]
The Basic mathematical Library shall provide best practices to develop an interface to access allits functionality from Ada.[END]
The Basic mathematical Library shall obtain numerically reproducible results on x86-64 and Scalable Processor Architecture V8 processors.[END]
The Basic mathematical Library shall be tested on a LEON2, a LEON4, and a x86-64 platformfor its reproducibility.[END]
The Basic mathematical Library shall provide the following procedures: sin, cos, tan, asin, acos, atan, atan2, floor, ceil, round, trunc, hypot, sqrt, fmod, remainder, fabs, signbit, modf, exp, pow, log10, log, fmin, fmax, isfinite, isinf, isnan, and copy-sign.[END]
The Basic mathematical Library shall be compatible to math.hregarding the procedures definedby ISO/IEC 9899.[END]
The Basic mathematical Library shall provide float (32 bit floating-point) and double (64 bitfloating-point) versions of the procedures.[END]
The Basic mathematical Library shall provide the following constants as defined by the POIX standard: M_E, M_LOG2E, M_LOG10E, M_LN2, M_LN10, M_PI, M_PI_2, M_PI_4, M_1_PI, M_2_PI, M_2_SQRTPI, M_SQRT2, M_SQRT1_2, MAXFLOAT, HUGE_VAL, HUGE_VALF, INFIN-ITY, NAN.[END]
The Basic mathematical Library shall provide a procedure to convert angles in degrees to radians.[END]
The Basic mathematical Library shall provide a procedure to convert an angle to an equivalentone in the range [0,2π].[END]
The Basic mathematical Library shall not use Floating Point Unit built in functions for elementary math function evaluation.[END]
The Basic mathematical Library shall not rely on the presence of the Fused Multiply-Addoperation for algorithm optimization.[END]
The Basic mathematical Library shall have a configurable modus to handle denormal arguments as zero.[END]
The Basic mathematical Library shall have a configurable modus to flush denormal computation results to zero.[END]
The Basic mathematical Library shall not use the errno global variable for error handling.[END]
The Basic mathematical Library procedures shall behave as defined by the POIX standard for special cases i.e. regarding arguments and outputs involving Not a Number, infinities, and ±0.[SEP]These behaviors of the procedures for specialarguments are difficult to present in prose thus, since a clear characterization of the implemented procedures is mandatory for the Basic mathematical Library, a tabular form will be used in the design and the user manual of the Basic mathematical Library.[END]
The Basic mathematical Library design shall define the behavior of the procedures in a tabular format, presenting the parameter domain decomposition and the corresponding output.[SEP]Regarding multi-threading, having thread-safe and reentrant procedures is mandatory for a numerical computation library that will run on multi-threaded and realtime applications on Operating Systems such as Real-Time Executive for Multiprocessor Systems.[END]
The Basic mathematical Library procedures shall be reentrant and thread-safe.[END]
The Basic mathematical Library procedures shall have a bounded Worst Case Execution Time.[END]
The Basic mathematical Library procedures shall have a well defined Worst Case Execution Time over the completeargument domain.[END]
The Basic mathematical Library shall have a memory footprint at most 30% bigger than the libm in Newlib.[END]
The Basic mathematical Library Test Suite shall performexecution time tests, analyzing the minimum, maximum, average, and median execution timesof the procedures.[END]
The Basic mathematical Library Test Suite shall perform memory usage tests, analyzing the memoryusage of the Basic mathematical Library procedures.[END]
The Basic mathematical Library design shall document every modification applied to the reused library.[END]
The Basic mathematical Library Test Suite shall be European Cooperation for Space Standardization category D compliant.[END]
The execution of the Basic mathematical Library Test Suite shall controlled from Windows or GNU/Linux host systems.[END]
The Basic mathematical Library Test Suite shall have a set of unambiguous input values for testing the Basic mathematical Library in the form of defined 32 bit and 64 bit floating-point datums.[END]
The Basic mathematical Library Test Suite shall measure the differences in accuracy in Unit in the Last Places between the results of the Basic mathematical Library procedures and the reference output values.[END]
The Basic mathematical Library Test Suite shall have a definition of Unit in the Last Place and how two floating-point numbers differ in Unit in the Last Places.[END]
The Basic mathematical Library procedures shall obtain results with a maximum difference of 0.5 Unit in the Last Places to the actual value of the mathematical function they implement.[END]
The test cases of the Basic mathematical Library Test Suite shall have reference output values that have been produced with an arbitrary precision mathematical software set to a higher precision than 64 bits.[END]
The reliability of the arbitrary precision mathematical software used to produce the reference output values to test the Basic mathematical Library shall be assessed and justified.[SEP]The Basic mathematical Library Test Suite shall produce test result reports, after running the test cases in batch or manual modus on the target platforms, that will have to be sent back to the host system controlling the test execution for their compilation into documents for pre-qualification evidence. The dependencies to run the test suite shall be minimal,to make sure the test suite can be reused on target systems where a delta qualification is required. A widely available interface for accessing and controlling the execution of Software on On-Board Computers is GNU Debugger.[END]
The Basic mathematical Library Test Suite shall run in batch and manual modus.[END]
The Basic mathematical Library Test Suite shall have no dependencies to commercial third partysoftware.[END]
The Basic mathematical Library Test Suite shall use GNU Debugger as the main interface to the Hardware execution platforms.[END]
The Basic mathematical Library Test Suite produce test result reports on the target platforms and get them back to the host system.[END]
The Basic mathematical Library Test Suite shall gather statement coverage data while running the test suite on target and on x86-6.[END]
The Basic mathematical Library Test Suite shall provide loop and Multiple Condition Decision Coverage coverage data obtained while developing the test suite.[END]
The Basic mathematical Library Test Suite shall analyze manually the path coverage of procedures with a very high cyclomatic complexity.[END]
