 The Basic mathematical Library (Basic mathematical Library) shall run on Scalable Processor Architecture V8 and x86-64processor architectures without halting the processor.These hardware environments, together with the wide use of the International OrganizationforStandardization(ISO)CprogramminglanguageforSpacecraftsoftwaredevelopment,andtheavail-ability of a to European Cooperation for Space Standardization) qualified Operating System (Operating System) such as Real-Time Executive for Multipro-cessor Systems (Real-Time Executive for Multiprocessor Systems), make an ISO C software library for numerical computations, based onIEEE-754 arithmetic, an appropriate candidate to pre-qualify. This pre-qualification, in compli-ancewiththeEuropean Cooperation for Space StandardizationstandardsandtoindustrialstandardslikeMotorIndustrySoftwareReliabilityAsociation (Motor Industry Software Reliability Asociation), would provide the Spacecraft software developer community with an additionalbuilding block to rely on, when piecing together their specific software system.     [END]
 The Basic mathematical Library shall be written in ISO/IEC 9899.[END]
 The Basic mathematical Library shall be compatible with the Real-Time Executive for Multiprocessor Systems Operating System.[END]
 The Basic mathematical Library shall be IEEE 754-2008 compliant.[END]
 The Basic mathematical Library shall be European Cooperation for Space Standardization category B compliant.[END]
 The Basic mathematical Library shall be Motor Industry Software Reliability Asociation-C:2012 compliant.[END]
 The Basic mathematical Library shall be compatible with the GNU C Compiler compiler and with Binutils.1Airbus DS and OHB2MeteosatThirdGeneration(Meteosat Third Generation)Attitude and Orbit Control Systemandequipmentsimulationmodeldevelopment,AS400satelliteplatformequipment simulation model development, and Sentinel 2 Attitude and Orbit Control System development.     Attitude and Orbit Control System Development for On-Board SoftwareSoftware Validation Facility Team Attitude and Orbit Control System Team On-Board Software Teamx86-64 Processor Architecture Scalable Processor Architecture V8 Processor ArchitectureDevelop Attitude and Orbit Control System equipment simulation modelsDevelop Attitude and Orbit Control System algorithmsEmbed equipment simulation models in Software Validation FacilityTest Attitude and Orbit Control System algorithms with equipment simulation modelsAttitude and Orbit Control System algorithms(Matlab/Simulink)Attitude and Orbit Control System equipment simulation models(C or Matlab/Simulink)SMP2 equipment simulation models(C)Implement Attitude and Orbit Control System algorithmsAttitude and Orbit Control System algorithms in On-Board Software(C)Run equipment simulation modelsEquipment simulation model reference runsTest SPM2 equipment modelsAttitude and Orbit Control System algorithms reference runsTest Attitude and Orbit Control System algorithms on Software Validation Facility emulatorValidated Attitude and Orbit Control System algorithms(C)Figure 5.3: Example of Attitude and Orbit Control System algorithm and equipment simulation model development for on-board software[END]
 The Basic mathematical Library shall provide best practices to develop an interface to access allits functionality from Matlab.     [END]
 The Basic mathematical Library shall provide best practices to develop an interface to access allits functionality from Simulink.[END]
 TheBasic mathematical LibraryshallprovidebestpracticestodevelopC-MEXfunctionwrappersfor all its procedures.[END]
 TheBasic mathematical LibraryshallprovidebestpracticestodevelopS-functionwrappersforallits procedures.[END]
 The Basic mathematical Library shall be compatible with source code auto-generated with theSimulink Coder.[END]
 The Basic mathematical Library shall provide best practices to develop an interface to access allits functionality from Ada.Thecombinationofdifferentprocessorarchitectures(x86-64andScalable Processor ArchitectureV8)andprogrammingenvironments (Matlab/Simulink, C, and Ada) for algorithms and equipment simulation-modeldevelopment,requiresahighdegreeofcross-platformreproducibilityofnumericalcomputationsifreliableandcomparableresultsaretobeobtainedoneachplatformforaconclusivevalidationof the on-board software.Thecapabilitytocomparethenumericalresultsobtainedonx86-64platformsrunningMatlabcode and the numerical results obtained with the on-board software developed in C runningon the Scalable Processor Architecture V8 target architecture would provide the possibility to rely on these comparableresults when searching for a software problem, making the detected problems much easier toreproduce on the development/simulation environment.[END]
 The Basic mathematical Library shall obtain numerically reproducible results on x86-64 andScalable Processor Architecture V8 processors.[END]
 The Basic mathematical Library shall be tested on a LEON2, a LEON4, and a x86-64 platformfor its reproducibility.     [END]
 The Basic mathematical Library shall provide the following procedures:sin,cos,tan,asin,acos,atan,atan2,floor,ceil,round,trunc,hypot,sqrt,fmod,remainder ,fabs,3Specifically the Attitude and Orbit Control System Software (Software) of the the satellites Meteosat Third Generation and Sentinel 2.4To use a common language with [AD01] whenever possible we will use here the names of the procedures ofmath.hthat implementthe evaluations of the required elementary functions.     signbit ,modf,exp,pow,log10,log,fmin,fmax,isfinite ,isinf,isnan, and copy-sign.[END]
 The Basic mathematical Library shall be compatible to math.hregarding the procedures definedby ISO/IEC 9899.[END]
 The Basic mathematical Library shall provide float (32 bit floating-point) and double (64 bitfloating-point) versions of the procedures.ForcompatibilitytoexistingcodeandtotheprogrammingexperienceofSpacecraftSoftwaredevelopersitis important that the Basic mathematical Library offers a similar interface to the math.hpresent in the ISO C compliantmathematical libraries widely used; not only in the exposed procedures but also in the providedconstants as defined by the Portable Operating System Interface (POperating SystemIX) standard for float anddouble floating-point numbers.[END]
 The Basic mathematical Library shall provide the following constants as defined by the POperating SystemIXstandard:M_E,M_LOG2E ,M_LOG10E ,M_LN2,M_LN10,M_PI,M_PI_2,M_PI_4,M_1_PI,M_2_PI,M_2_SQRTPI ,M_SQRT2 ,M_SQRT1_2 ,MAXFLOAT ,HUGE_VAL ,HUGE_VALF ,INFIN-ITY,NAN.ThefactthatoperationswithanglesareveryextendedinSpacecraftSoftwareandthattheISOC99standardrequirestheuseofradiansasargumentsmakeitreasonabletwoincludetwoextrafunctions: onefor converting from degrees to radians and one for reducing the value of an angle to a rangewhere trigonometric operations on the angle will yield the same result as on the original value.[END]
 TheBasic mathematical Libraryshallprovideaproceduretoconvertanglesindegreestoradians.[END]
 The Basic mathematical Library shall provide a procedure to convert an angle to an equivalentone in the range [0,2π].5.3.1 NumericalReproducibilityA further numerical requirement, the reproducibility of numerical computations (as defined byRevolandThévenyin[RT13]),togetherwiththeaccuracy,aresometimessurroundedin mythicalthought5.On one side, it is often thought that the compliance to the IEEE 754 standard automaticallyyieldsreproducibleresultsondifferentplatforms. Therealityisthatthisisnotthepurposeofthestandardandthatthestandardleavesroomforimplementationdependentdecisionsthatleadto5As opposed to scientific thought.     non-reproducible results even possibly between different executions on the same platform (see[CK09]). Ontheotherside,theassumptionofunavoidablestepwisedegradationofaccuracybe-cause of round-off errors in floating-point computations produces numerical requirements suchasthehypothetical: "Allcomputationsshallbedoneindouble(64bit)precision"and"Therelativeerror shall be smaller than 10−8"; these would require a proper numerical analysis to justify thebig loss of accuracy from the first to the second requirement.Thus,reproducibilityshallbeassessedbynumericalanalysis. ThiskindofanalysisshowsthatprocessorandFloating Point Unitsfeatures,togetherwiththedevelopedSoftwareprocedures’characteristicsdefinethe reproducibility of the results. An analysis of possible Software procedures is out of the scope ofthis document, we will focus on the impact of Floating Point Unit characteristics.Since the reproducibility of numerical computations on different processor architectures andsoftwareenvironmentsisnecessaryforaconsistentSpacecraftsoftwaredevelopment,requirementsandconstraints in the use of Floating Point Unit features will be necessary, to define execution environments thatare as homogeneous as possible.Floating Point Units like the MEIKO, GRFloating Point Unit, or the ones present in x86-64 processors have built in algo-rithms for some elementary mathematical functions (e.g. square root). The amount of providedfunctionalityisdifferentfromFloating Point UnittoFloating Point Unitandsoarethealgorithmsprovidedforagivenelemen-tary function. Thus, the use of these built in functions on different platforms will yield differentnumerical results. This shall be avoided by the Basic mathematical Library.[END]
 TheBasic mathematical LibraryshallnotuseFloating Point Unitbuiltinfunctionsforelementarymathfunctionevaluation.Another feature of Floating Point Units, which is present on some x86-64 processors but is not present onthe MEIKO and GRFloating Point Units, is the Fused Multiply-Add (Fused Multiply-Add) operation. Its presence or absencealso results in inconsistent numerical results on different platforms, since the rounding error ofan operation is not the same if the multiplication and an addition are done in a single step (i.e.with Fused Multiply-Add) or in two (i.e., without Fused Multiply-Add). Thus, the Basic mathematical Library shall not rely on the presence of an Fused Multiply-Addoperationforalgorithmoptimization(e.g.,forpolynomialevaluationwithHorner’smethod). TheFused Multiply-Add feature is a requirement of the IEEE 754 standard in its 2008 version [AD01] but this wasnotthecaseinthe1985originalversion. ThisisthereasonthattheMEIKOFloating Point Unitdoesnotcontainit although being IEEE 754 standard compliant.[END]
 TheBasic mathematical LibraryshallnotrelyonthepresenceoftheFused Multiply-Addoperationforalgorithmoptimization.The treatment of denormal or subnormal floating-point numbers by the Floating Point Unit poses an addi-tionalchallengetotheproductionofreproducibleresultsondifferentarchitectures. TheabilityoftheFloating Point Unitstoproduceandconsumesubnormalfloating-pointnumbersopposedtotheirtreatmentas 0, produces clearly different numerical results.Subnormals are floating-point numbers smaller than the smallest normalfloating-point num-berandbiggerthan0. Normalfloating-pointnumbersarethosethathave1astheirmostsignif-icant bit. This is accomplished by shifting the bits in the mantissa to the left and lowering theexponent by the same amount. Since for all normal floating-point numbers this bit is equal to     1 it is not even stored. If a floating-point number is produced that has the lowest exponent andone or more zeros as its most significant bits, this number cannot be normalized by shifting themantissa left, since the exponent cannot be further lowered. These floating-point numbers arecalled denormals or subnormals.These subnormal floating point numbers are defined in the IEEE 754 standard and provide atleast the following features:• They extend the floating-point range linearly between 0 and the smallest normal floating-point number.• Theypermitthesocalled gradualunderflow ,sincesubnormalnumbersareproducedwherean abrupt underflow would have occurred.The backside for these features are some drawbacks:• The use of subnormals produces loss of precision. There are less significant bits in themantissa, since the leftmost bits are 0.• TheFloating Point Unitperformancecanbeuptoabout100timesworsewhenoperatingwithsubnormalswhen special microcodes are used for this purpose.Becauseofthisreason,severalFloating Point Unitsdonothandlesubnormalfloating-pointnumbers. Amongthese is the GRFloating Point Unit, but not the Intel Floating Point Units and the MEIKO Floating Point Unit.TheFloating Point Unitsnothandlingsubnormalnumberseitherroundtheproducedresultsuptothesmall-est floating-point number or flush the result to zero (FTZ) and set the corresponding underflowbit. When handling subnormals as input arguments, they set an Floating Point Unit trap (as in the case of theGRFloating Point Unit),whichishandledasafatalerrorbyoperatingsystemsandsuchasReal-Time Executive for Multiprocessor SystemsandVxWorks,andcrosscompilationsystemssuchasBare-CCrossCompilationSystem(Bare-C Cross Compilation System).Topreventthisbehavior,Floating Point UnitsliketheGRFloating Point Unitmustbesetinanon-standardmode(nonstandardregardingIEEE754)thathandlesthesubnormalsaszero. ThismodecanalsobeenforcedonIntelx86-64proces-sors, writing to the corresponding SSE register and setting the Denormals-Are-Zero (DAZ) andFlush-To-Zero (FTZ) modes.[END]
 The Basic mathematical Library shall have a configurable modus to handle denormal argumentsas zero.[END]
 The Basic mathematical Library shall have a configurable modus to flush denormal computationresults to zero.Thereproducibilityofresultsisalsoaffectedbythecompilerusedandtheprocessor’sinstruc-tion pipelining. Guidelines and best practices are defined in the next chapter to address theseaspects and to make numerical reproducibility, and known accuracy, plausible aspirations forSpacecraft on-board software development.     [END]
 The Basic mathematical Library shall not use the errnoglobal variable for error handling.[END]
 The Basic mathematical Library procedures shall behave as defined by the POperating SystemIX standard forspecialcases i.e. regardingargumentsandoutputsinvolvingNotaNumber(Not a Number),infinities,and±0.These behaviors of the procedures for specialarguments are difficult to present in prose thus,since a clear characterization of the implemented procedures is mandatory for the Basic mathematical Library, a tabularform will be used in the design and the user manual of the Basic mathematical Library.[END]
 The Basic mathematical Library design shall define the behavior of the procedures in a tabularformat, presenting the parameter domain decomposition and the corresponding output.Regarding multi-threading, having thread-safe and reentrant procedures is mandatory for anumericalcomputationlibrarythatwillrunonmulti-threadedandrealtimeapplicationsonOperating Systemssuch as Real-Time Executive for Multiprocessor Systems.[END]
 The Basic mathematical Library procedures shall be reentrant and thread-safe.Regardingtheperformance,themostimportantcharacteristicoftheBasic mathematical LibrarytobeusedforSpacecraftSoftwareisthattheWorstCaseExecutionTime(WCET)oftheimplementedproceduresshallbeboundedand well defined over the complete argument domain. In addition, the memory footprint of theBasic mathematical Library shall be kept minimal and very close to the one that thelibminNewlibhas.[END]
 The Basic mathematical Library procedures shall have a bounded WCET.[END]
 The Basic mathematical Library procedures shall have a well defined WCET over the completeargument domain.6TheISOC99standarddoesnotdefine errnotobeexplicitlyaglobalvariable,butjustamodifiable lvaluethatisaccessibleafter a function call.7Somereasonsforthisarethatthethread-safetyofthisvariableisimplementationdependentandthatitsusewasforbidden by Motor Industry Software Reliability Asociation C (Motor Industry Software Reliability Asociation C:2004 rule 20.5)     [END]
 The Basic mathematical Library shall have a memory footprint at most 30% bigger than the libminNewlib.[END]
 The Basic mathematical Library Test Suite (Basic mathematical Library Test Suite) shall performexecution time tests, analyzing the minimum, maximum, average, and median execution timesof the procedures.[END]
 The Basic mathematical Library Test Suite shall perform memory usage tests, analyzing the memoryusage of the Basic mathematical Library procedures.[END]
 The Basic mathematical Library design shall document every modification applied to the reusedlibrary.[END]
 The Basic mathematical Library Test Suite shall be European Cooperation for Space Standardization category D compliant.[END]
 The execution of the Basic mathematical Library Test Suite shall controlled from Windows orGNU/Linux hostsystems.Further, to test the Basic mathematical Library it is mandatory to have a clear method to:     • produce a defined and unambiguous set of input and output values to check the accuracyof the evaluation of the mathematical functions implemented in the procedures of the Basic mathematical Libraryand• to measure the difference between the evaluation of the Basic mathematical Library procedures and the referenceoutput values.Theinputvalueswillhavetobeunambiguouslydefined,guaranteeingthattheevaluationwiththeBasic mathematical Libraryandtheevaluationforreferenceisdoneonthesameargumentorarguments. Forexample,the input values shall not be defined in their decimal representation if it cannot be guaranteedthat their conversion to machine representation will yield the same result8.[END]
 TheBasic mathematical Library Test SuiteshallhaveasetofunambiguousinputvaluesfortestingtheBasic mathematical Library in the form of defined 32 bit and 64 bit floating-point datums.Themostextendedwaytopresentdifferencesofaccuracybetweenfloating-pointcalculationsistopresentthisdifferenceinUnitsintheLastPlace(Unit in the Last Places). ThenotionofUnit in the Last Placeisarelativeerrormeasure but it is not always defined the same way and the implementations to obtain accuracydifferences in Unit in the Last Places may vary. [Hig02] gives in §2.1 the definition ulp(y)=βe−t9and statesthat "Ifxis any real number we can say that yandxagree to |y−x|/ulp (y)Unit in the Last Places iny". TheBoostC++libraryprovidesthe float_distance functiontoobtainthe"representationdistancebetween two floating point values (Unit in the Last Place)", which is a different concept than the one defined by[Hig02], since it only measures the representation distance between two floating-point numbers(which is always an integer), while the definition by Higham measures the difference between areal number and a floating-point number in Unit in the Last Places of the floating-point number (which is not aninteger in the general case).This requires a clear definition of the error measure presentation when testing the Basic mathematical Library.[END]
 The Basic mathematical Library Test Suite shall measure the differences in accuracy in Unit in the Last Places betweenthe results of the Basic mathematical Library procedures and the reference output values.[END]
 The Basic mathematical Library Test Suite shall have a definition of Unit in the Last Place and how two floating-pointnumbers differ in Unit in the Last Places.[END]
 The Basic mathematical Library procedures shall obtain results with a maximum difference of 0.5Unit in the Last Places to the actual value of the mathematical function they implement.8The conversion of the literal string "1.4142135623730950488016887242097" to an IEEE 754 floating point numbermay yielddifferent results depending on the used algorithm [Reg].9Whereβisthebaseorradixofthefloating-pointsystem, ttheprecisionorsizeofthemantissa,and etheexponentof the floating-point representation of y.     The reference output values, with which the outputs of the Basic mathematical Library are going to be compared to,shall be values obtained with a reliable method and their accuracy and precision shall be in anycase higher than the one achievable with the Basic mathematical Library to be tested, to guarantee that the Basic mathematical Library is testedagainst mathematically more correct results.[END]
 ThetestcasesoftheBasic mathematical Library Test Suiteshallhavereferenceoutputvaluesthathavebeen produced with an arbitrary precision mathematical software set to a higher precision than64 bits.[END]
 The reliability of the arbitrary precision mathematical software usedto produce the reference output values to test the Basic mathematical Library shall be assessed and justified.The Basic mathematical Library Test Suite shall produce test result reports, after running the test cases in batch or manualmodusonthetargetplatforms,thatwillhavetobesentbacktothehostsystemcontrollingthetestexecutionfortheircompilationintodocumentsforpre-qualificationevidence. Thedependenciestorunthetestsuiteshallbeminimal,tomakesurethetestsuitecanbereusedontargetsystemswhereadeltaqualificationisrequired. Awidelyavailableinterfaceforaccessingandcontrollingthe execution of Software on On-Board Computers is GNU Debugger (GNU Debugger).[END]
 The Basic mathematical Library Test Suite shall run in batch and manual modus.[END]
 The Basic mathematical Library Test Suite shall have no dependencies to commercial third partysoftware.[END]
 The Basic mathematical Library Test Suite shall use GNU Debugger as the main interface to the Hardware (Hardware)execution platforms.[END]
 The Basic mathematical Library Test Suite produce test result reports on the target platforms and getthem back to the host system.The reports produced by the Basic mathematical Library Test Suite shall also include structural coverage results. Providingsufficient evidence on the achieved coverage with the tests that have been run on the targetsis an important measure of the quality of the tests. Statement coverage data can be obtainedwhilerunningthetestsuiteonthetarget,whileloopandMultipleConditionDecisionCoverage(Multiple Condition Decision Coverage)coveragedatacanbeobtained offline,usingproprietarytoolsonthetestcasesset,butnot while running the Basic mathematical Library Test Suite. Path coverage shall also be analyzed for those cases where a veryhighcyclomaticcomplexityofaproceduredemandsextraevidenceforanadequatetestcoverage.     [END]
 The Basic mathematical Library Test Suite shall gather statement coverage data while running the testsuite on target and on x86-6.[END]
 TheBasic mathematical Library Test SuiteshallprovideloopandMultiple Condition Decision Coveragecoveragedataobtainedwhiledeveloping the test suite.[END]
 TheBasic mathematical Library Test Suiteshallanalyzemanuallythepathcoverageofprocedureswitha very high cyclomatic complexity.   [END]
