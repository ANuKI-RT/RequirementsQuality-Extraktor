Basic mathematical Library Test Suite shall be implemented in ISO C99 / C++11.[END]
Basic mathematical Library Test Suite shall be reusable and shall not make use of commercial third party software.[END]
Basic mathematical Library Test Suite shall work on both host platforms: on Windows and Linux.[SEP]The Test Suite Executable execution on a target platform will be controlled from a host PC running Windows or Linux.[END]
Basic mathematical Library Test Suite shall support tests for all functions and macros of Basic mathematical Library in single (32bit) and double (64bit) floating point precision.[END]
Basic mathematical Library Test Suite shall be designed to work as a stand-alone application.[END]
Basic mathematical Library Test Suite shall be expand able, allowing the integration of new mathematical functions  by configuration means and dedicated code source files.[END]
Basic mathematical Library Test Suite shall allow user to sele ct one or more functions for running a test.[END]
Basic mathematical Library Test Suite shall allow the user to select one of the predefined test types before a test run.[END]
Basic mathematical Library Test Suite shall allow the user to select one of the configured targets before a test run.[END]
Basic mathematical Library Test Suite shall support the automatically build of the target-native binaries on the host machine for the functions selected for test, based on a user adapted build script for specific target.[SEP]The upload of the binaries to the target may be done either automatically by Basic mathematical Library Test Suite or manually with external tools.[END]
Basic mathematical Library Test Suite shall execute the test on host and target using GDB as a common interface.[END]
Basic mathematical Library Test Suite shall automatically export all results of the Test Suite Executable execution on a target into documents in order to provide the qualification evidence of the Basic mathematical Library.[END]
Basic mathematical Library Test Suite shall not loose results from previous runs. Basic mathematical Library Test Suite shall archive the obtained test report along with platform information as a performed run results.[SEP]Archiving different runs allow user not only to later check the results but also to measure reproducibility of the library by comparing them.[END]
The archived results shall also contain configuration information previously set by the user in order to permit  the reproducibility of the test.  Remark: Will be archived, at least: test input files, produced and used binaries, intermediary and log files, result documents.[SEP]Archiving configuration information allows  the user to rerun the test if necessary.[END]
Basic mathematical Library Test Suite shall allow the execution of functional unit tests. Remark:  Unit tests are written in order to verify tested function requirements, domain limits, corner cases, etc.[SEP]Justification of the chosen values will be part of the Basic mathematical Library SValP/SUITP.[END]
Basic mathematical Library Test Suite shall build a specific report to present functional unit tests results after unit tests run. It will contain at minimum: - result status PASS/FAIL per test case - input, expected and obtained values per test case - summary PASS/FAIL  per function[END] 
Basic mathematical Library Test Suite shall allow tests that adjust the value of the functions parameters by sweeping the parameter values through a user defined range.[SEP]1. This test type will be used in conjunction with accuracy / performance tests.  2. The iteration of sweeping parameter can be of the following types: float, linear, logarithmic, binary.[END]
Basic mathematical Library Test Suite shall allow tests that check mathematical properties of tested functions.[SEP]This will help the users understand and identify the mathematical properties that they should rely on. Details will be given in SValP/SVS.[END]
Basic mathematical Library Test Suite shall allow comparison of tests to help assessing numerical reproducibility of the results produced by the mathematical library, from one run to the next, either on the same or different machines for the same input data set.[SEP]1. Numerical reproducibility means getting bitwise identical results from  different functions calls. See [RD 7]. 2. The comparison will be done by using outputs of previous runs as the referenc e for comparisons (instead of the reference library).[END]
Basic mathematical Library Test Suite shall generate a report to present numerical reproducibility results  which contains: input values, output value s obtained on current run and on reference run; ULP, relative and absolute error calculated between the runs.[END]
Basic mathematical Library Test Suite shall provide structural coverage information for execution of the unit tests .  special coverage report will be generated containing at minimum:  - code coverage % per test - code coverage % global per function - coverage summary[END]
Basic mathematical Library Test Suite shall provide execution time measurements for each tested function.[SEP]The execution time will be used to provide time performance calculations for Basic mathematical Library (e.g. average time, max/min , etc.)[END]
Basic mathematical Library Test Suite shall provide in report file the execution time measurements after performance  / timing tests.[END]
Basic mathematical Library Test Suite shall allow tests that check for accuracy (e.g. ULP error, absolute error and relative error).[SEP]for accuracy tests parameter sweeping will be done on a selected range or special values.[END]
The Basic mathematical Library Test Suite shall evaluate the accuracy of the tested library against a bit accurate reference library.[SEP]For agreed reference ma thematical libraries.[END]
Basic mathematical Library Test Suite shall produce a report after accuracy tests. The reports will contain at minimum:  - Input data: Range of the parameters taken in consideration and step  - Reference values obtained with reference mathematical library - Output value obtained with Basic mathematical Library - Error information: ULP error, absolute error, relative error[END]
Basic mathematical Library Test Suite application shall run on a standard x86_64 PC with Windows / Linux operating system, with a minimum of 4 GB RAM and at least an Intel i3 (or equivalent) processor.[END]
Test Suite Executable executable size shall not exceed 1024 kB.[END]
During tests execution, Basic mathematical Library Test Suite shall inform the user about the progress of the test being executed.[SEP]This information help the user to assess that test run is in progress or test run hung up.[END]
Basic mathematical Library Test Suite shall be able to handle large amount of data results in case of parameter sweeping tests, for example testing 106 input values in a test case.[SEP]The application will retrieve the results during the test if their size will increase over a certain limit. This might be required when running the sweeping tests.[END]
Basic mathematical Library Test Suite shall use the following type of input files:  - configuration files in XML format  - test cases written in in XML format.[SEP]predefined format may be used for test cases in order to help generate documentation files.[END]
The Basic mathematical Library Test Suite application configuration file will contain at least: - Localization of toolchain used for Test Suite Executable compilation on the host machine; - Localization of libraries to be included in Test Suite Executable compilation for the target machine; - The target configuration[SEP]This information is required for building target binary and later for repo rt generation.[END]
For each test execution, the Basic mathematical Library TS shall use as input a test configuration file which contains at least this information: - Name of the function(s) to be tested - Type of the test  - Tested values and expected values for single value tests - Range of parameter values for the tests that need sweeping the function parameter values  - Any other configuration parameter needed to run the tests.[SEP]This minimal information is required for qualification reports.[END]
The output of Basic mathematical Library Test Suite shall be:  - Details result files (ASConfiguration ItemI / csv format) describing inputs, outputs, expected values, etc - High level report documents (HTML, XML format) describing global information. Detail test report files in csv format contains: - Input values - Expected values - Obtained values - Errors (ULP, absolute, relative) - Execution time[END]
High level test report documents in html/xml format contains:  - Target information - Basic mathematical Library information - Basic mathematical Library Test Suite and toolchain information - Name of the function tested - Description of the test type selected - Summarisation section containing information interpreting the results of the suite of tests. - Depending of type of the test, for each function may be provided several types of graphs, e.g. ULP, absolute and relative error vs argument value.[END]
gdb shall be the software interface between Basic mathematical Library Test Suite and the target platforms. It will be used to execute the Test Suite Executable on the target.[SEP]gdb will be used even the target is the host machine[END]
Basic mathematical Library Test Suite shall allow running the tests in batch mode.[END]
Basic mathematical Library Test Suite shall allow running the tests manually.[END]
Test Suite Executable shall run as a minimum in Real-Time Executive for Multiprocessor Systems versions 4.8 – 4.11, on the target SPARC V8 Hardware (Hardware) , a LEON 2 (AT697E/F)  processor with Meiko FPU.[END]
The host processors where Test Suite Executable shall execute are x64 architecture.[END]
Test Suite Executable shall run under Real-Time Executive for Multiprocessor Systems versions 4.8 – 4.11, on the target SPARC V8 Hardware (Hardware) , with LEON 4 using GR-CPConfiguration Item-LEON4-N2X platform.[END]
Basic mathematical Library Test Suite shall not make use or depend on commercial third party software. If necessary, free and open source tools may be used integrated in the testing framework.[SEP]Commercial third party tools can be used to gather MC/DC and loop coverage data. This data will not be produced when running the Test Suite Executable on target.[END]
On target boards, Test Suite Executable shall be able to run under Real-Time Executive for Multiprocessor Systems Operating system, versions 4.8 – 4.11.Basic mathematical Library[END]
Test Suite Executable shall be able to run under Window and Linux Operating systems[END].
Basic mathematical Library Test Suite development shall be compliant to the software standard European Cooperation for Space Standardization -EST-40C [AD 2] criticality category D and the necessary documentation shall be produced.[END]
Test Suite Executable shall be portable on different platforms, at least between Intel, AMD, Sparc V8 based processors.[END]
Basic mathematical Library Test Suite shall be developed compliant to the (tailored) software standard  European Cooperation for Space Standardization-Q-ST-80C [AD 3] criticality category D and the necessary documentation shall be produced.[END]
The Basic mathematical Library Test Suite statement coverage (source code) metric achieved by validation/integration/unit tests shall be at least 70%.[END]
Basic mathematical Library Test Suite development shall respect software metrics target values defined in European Cooperation for Space Standardization-Q-HB- 04A quality model for category D, excepting following metrics defined not applicable for Basic mathematical Library Test Suite: x Modular span of control x Modular coupling x Modular cohesion x Process reliability adequacy x Statement Coverage (Object Code) x Decision Coverage (Source Code) x Modified Condition & Decision Coverage (Source Code) x Safety activities adequacy x Security checklist x User documentation clarity x Process assessment [European Cooperation for Space Standardization-HB-Q-02][END]
The coding rules used for C++ development in Basic mathematical Library Test Suite shall follow the “Google C++ Style Guide ” defined at: https://google.github.io/styleguide/cppguide.html[SEP]The Basic mathematical Library Test Suite will be developed in C++.[END]
The coding rules used for C development in Basic mathematical Library Test Suite shall follow the “The Power of Ten - Rules for Developing Safety Critical Cod ” defined at: http://spinroot.com/gerard/pdf/P10.pdf[END]    
Basic mathematical Library Test Suite shall check the communication with the target (through GDB) by using checksums on transferred packets and it shall implement retry management.[END]
Two logical repositories will be used for the configuration management activities:  x the development repository: this repository will contain and handle the version control of the complete project data as it is been developed x the master repository: this repository will contain and handle the baselines of the Configuration Item as listed in the Configuration Item List.[SEP]Detailed process is given in SCMP [RD 3].[END]
The following data formats will be used for the Configuration Item produced for distribution and archiving:  x PDF for documents x ZIP for source code files.[SEP]For content creation the formats will correspond to the tools being used. These files will be version controlled in these formats in the development repository and converted/packed to PDF or ZIP once they are released and put in the master repository.[END]     
The BTLS source files shall be accompanied by a makefile.[SEP]makefile easies the compilation of the application.[END]
The BTLS shall provide or generate a makefile for each binary it intends to cross -compile for target execution.[SEP]makefile easies the compilation of the Test Suite Executable.[END]